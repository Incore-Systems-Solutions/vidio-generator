const a="https://api.instantvideoapp.com",n={async getCharacters(){try{const e=await(await fetch(`${a}/api/v1/characters`)).json();if(!e.status)throw new Error(e.message);return e.data}catch(o){throw console.error("Error fetching characters:",o),o}}},i={async getBackgrounds(){try{const e=await(await fetch(`${a}/api/v1/backgrounds`)).json();if(!e.status)throw new Error(e.message);return e.data}catch(o){throw console.error("Error fetching backgrounds:",o),o}}},c={async uploadImage(o){try{const r=await(await fetch(`${a}/api/v1/upload-image`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({image:o})})).json();if(!r.status)throw new Error(r.message||"Upload failed");return r.data}catch(e){throw console.error("Error uploading image:",e),e}}},p={async storeVideoData(o){try{const e=await fetch(`${a}/api/video-ai/store`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)}),r=await e.json();if(!e.ok)throw new Error(r.message||"Store failed");return r}catch(e){throw console.error("Error storing video data:",e),e}}},h={async requestOTP(o){try{const e=await fetch(`${a}/api/video-ai/request-otp-koin`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)}),r=await e.json();if(!e.ok)throw new Error(r.message||"Request OTP failed");return r}catch(e){throw console.error("Error requesting OTP:",e),e}},async validateOTP(o){try{const e=await fetch(`${a}/api/video-ai/validasi-otp-koin`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)}),r=await e.json();if(!e.ok)throw new Error(r.message||"Validate OTP failed");return r}catch(e){throw console.error("Error validating OTP:",e),e}}},d={async getTransaction(o){try{const e=await fetch(`${a}/api/video-ai/transaksi/${o}`,{method:"GET",headers:{"Content-Type":"application/json"}}),r=await e.json();if(!e.ok)throw new Error(r.message||"Get transaction failed");return r}catch(e){throw console.error("Error getting transaction:",e),e}}},l={async generateVideo(o){try{const e=await fetch(`${a}/api/video-ai/generate`,{method:"GET",headers:{"Content-Type":"application/json","x-api-key":o}}),r=await e.json();if(!e.ok)throw new Error(r.message||"Generate video failed");return r}catch(e){throw console.error("Error generating video:",e),e}},async checkVideoStatus(o){try{const e=await fetch(`${a}/api/video-ai/check/${o}`,{method:"GET",headers:{"Content-Type":"application/json"}}),r=await e.json();if(!e.ok)throw new Error(r.message||"Check video status failed");return r}catch(e){throw console.error("Error checking video status:",e),e}},async convertVideoForPlatform(o,e,r){try{const t=await fetch(`${a}/api/video-ai/convert`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({video_url:o,platform:e,task_id:r})}),s=await t.json();if(!t.ok)throw new Error(s.message||"Video conversion failed");return s}catch(t){throw console.error("Error converting video:",t),t}}},w={async getPublicVideos(o=1,e=10){try{const r=await fetch(`${a}/api/video-ai/public?page=${o}&per_page=${e}`,{method:"GET",headers:{"Content-Type":"application/json"}}),t=await r.json();if(!r.ok)throw new Error(t.message||"Failed to fetch public videos");return t}catch(r){throw console.error("Error fetching public videos:",r),r}},async getVideoDetail(o){try{const e=await fetch(`${a}/api/video-ai/public/${o}`,{method:"GET",headers:{"Content-Type":"application/json"}}),r=await e.json();if(!e.ok)throw new Error(r.message||"Failed to fetch video detail");return r}catch(e){throw console.error("Error fetching video detail:",e),e}}},y={async requestOTP(o){try{const e=await fetch(`${a}/api/video-ai/otp`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:o})}),r=await e.json();if(!e.ok)throw new Error(r.message||"OTP request failed");return r}catch(e){throw console.error("Error requesting OTP:",e),e}},async verifyOTP(o,e){try{const r=await fetch(`${a}/api/video-ai/verify-otp`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:o,otp:e})}),t=await r.json();if(!r.ok)throw new Error(t.message||"OTP verification failed");return t}catch(r){throw console.error("Error verifying OTP:",r),r}},async getVideoList(o,e=1,r=5){try{const t=await fetch(`${a}/api/video-ai/check-list-video?page=${e}&per_page=${r}`,{method:"GET",headers:{"Content-Type":"application/json","x-api-key":o}}),s=await t.json();if(!t.ok)throw new Error(s.message||"Failed to fetch video list");return s}catch(t){throw console.error("Error fetching video list:",t),t}},async getCoinBalance(o){try{const e=await fetch(`${a}/api/video-ai/check-koin`,{method:"GET",headers:{"Content-Type":"application/json","x-api-key":o}}),r=await e.json();if(!e.ok)throw new Error(r.message||"Failed to fetch coin balance");return r}catch(e){throw console.error("Error fetching coin balance:",e),e}}};export{p as a,y as b,i as c,n as d,h as o,w as p,d as t,c as u,l as v};
