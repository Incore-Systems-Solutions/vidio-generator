const t="https://api.instantvideoapp.com",n={async getCharacters(){try{const r=await(await fetch(`${t}/api/v1/characters`)).json();if(!r.status)throw new Error(r.message);return r.data}catch(e){throw console.error("Error fetching characters:",e),e}}},i={async getBackgrounds(){try{const r=await(await fetch(`${t}/api/v1/backgrounds`)).json();if(!r.status)throw new Error(r.message);return r.data}catch(e){throw console.error("Error fetching backgrounds:",e),e}}},c={async uploadImage(e){try{const o=await(await fetch(`${t}/api/v1/upload-image`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({image:e})})).json();if(!o.status)throw new Error(o.message||"Upload failed");return o.data}catch(r){throw console.error("Error uploading image:",r),r}}},d={async storeVideoData(e){try{const r=await fetch(`${t}/api/video-ai/store`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}),o=await r.json();if(!r.ok)throw new Error(o.message||"Store failed");return o}catch(r){throw console.error("Error storing video data:",r),r}}},p={async requestOTP(e){try{const r=await fetch(`${t}/api/video-ai/request-otp-koin`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}),o=await r.json();if(!r.ok)throw new Error(o.message||"Request OTP failed");return o}catch(r){throw console.error("Error requesting OTP:",r),r}},async validateOTP(e){try{const r=await fetch(`${t}/api/video-ai/validasi-otp-koin`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}),o=await r.json();if(!r.ok)throw new Error(o.message||"Validate OTP failed");return o}catch(r){throw console.error("Error validating OTP:",r),r}}},h={async getTransaction(e){try{const r=await fetch(`${t}/api/video-ai/transaksi/${e}`,{method:"GET",headers:{"Content-Type":"application/json"}}),o=await r.json();if(!r.ok)throw new Error(o.message||"Get transaction failed");return o}catch(r){throw console.error("Error getting transaction:",r),r}}},w={async generateVideo(e){try{const r=await fetch(`${t}/api/video-ai/generate`,{method:"GET",headers:{"Content-Type":"application/json","x-api-key":e}}),o=await r.json();if(!r.ok)throw new Error(o.message||"Generate video failed");return o}catch(r){throw console.error("Error generating video:",r),r}},async checkVideoStatus(e){try{const r=await fetch(`${t}/api/video-ai/check/${e}`,{method:"GET",headers:{"Content-Type":"application/json"}}),o=await r.json();if(!r.ok)throw new Error(o.message||"Check video status failed");return o}catch(r){throw console.error("Error checking video status:",r),r}},async convertVideoForPlatform(e,r,o){try{const a=await fetch(`${t}/api/video-ai/convert`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({video_url:e,platform:r,task_id:o})}),s=await a.json();if(!a.ok)throw new Error(s.message||"Video conversion failed");return s}catch(a){throw console.error("Error converting video:",a),a}}};export{d as a,i as b,n as c,p as o,h as t,c as u,w as v};
