const a="https://api.instantvideoapp.com",i={async storeVideoData(o){try{const e=await fetch(`${a}/api/video-ai/store`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)}),r=await e.json();if(!e.ok)throw new Error(r.message||"Store failed");return r}catch(e){throw console.error("Error storing video data:",e),e}},async storeMultipleVideoData(o){try{const e={"Content-Type":"application/json"},r=await fetch(`${a}/api/video-ai/create-transaction`,{method:"POST",headers:e,body:JSON.stringify(o)}),t=await r.json();if(!r.ok)throw new Error(t.message||"Store multiple failed");return t}catch(e){throw console.error("Error storing multiple video data:",e),e}}},s={async requestOTP(o){try{const e=await fetch(`${a}/api/video-ai/request-otp-koin`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)}),r=await e.json();if(!e.ok)throw new Error(r.message||"Request OTP failed");return r}catch(e){throw console.error("Error requesting OTP:",e),e}},async validateOTP(o){try{const e=await fetch(`${a}/api/video-ai/validasi-otp-koin`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)}),r=await e.json();if(!e.ok)throw new Error(r.message||"Validate OTP failed");return r}catch(e){throw console.error("Error validating OTP:",e),e}}},c={async getTransaction(o){try{const e=await fetch(`${a}/api/video-ai/transaksi/${o}`,{method:"GET",headers:{"Content-Type":"application/json"}}),r=await e.json();if(!e.ok)throw new Error(r.message||"Get transaction failed");return r}catch(e){throw console.error("Error getting transaction:",e),e}}},h={async generateVideo(o){try{const e=await fetch(`${a}/api/video-ai/generate`,{method:"GET",headers:{"Content-Type":"application/json","x-api-key":o}}),r=await e.json();if(!e.ok)throw new Error(r.message||"Generate video failed");return r}catch(e){throw console.error("Error generating video:",e),e}},async checkVideoStatus(o){try{const e=await fetch(`${a}/api/video-ai/check/${o}`,{method:"GET",headers:{"Content-Type":"application/json"}}),r=await e.json();if(!e.ok)throw new Error(r.message||"Check video status failed");return r}catch(e){throw console.error("Error checking video status:",e),e}},async convertVideoForPlatform(o,e,r){try{const t=await fetch(`${a}/api/video-ai/convert`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({video_url:o,platform:e,task_id:r})}),n=await t.json();if(!t.ok)throw new Error(n.message||"Video conversion failed");return n}catch(t){throw console.error("Error converting video:",t),t}}},p={async getPublicVideos(o=1,e=10){try{const r=await fetch(`${a}/api/gallery/public?page=${o}&per_page=${e}`,{method:"GET",headers:{"Content-Type":"application/json"}}),t=await r.json();if(!r.ok)throw new Error(t.message||"Failed to fetch public videos");return t}catch(r){throw console.error("Error fetching public videos:",r),r}},async getVideoDetail(o,e="id"){try{const r=await fetch(`${a}/api/gallery/public/show/${o}?lang=${e}`,{method:"GET",headers:{"Content-Type":"application/json"}}),t=await r.json();if(!r.ok)throw new Error(t.message||"Failed to fetch video detail");return t}catch(r){throw console.error("Error fetching video detail:",r),r}},async getVideoDetail_OLD(o){try{const e=await fetch(`${a}/api/video-ai/public/${o}`,{method:"GET",headers:{"Content-Type":"application/json"}}),r=await e.json();if(!e.ok)throw new Error(r.message||"Failed to fetch video detail");return r}catch(e){throw console.error("Error fetching video detail:",e),e}}},d={async initChat(o){try{const e=await fetch(`${a}/api/chat-ai`,{method:"GET",headers:{"Content-Type":"application/json","x-api-key":o}}),r=await e.json();if(!e.ok){const t=new Error(r.message||"Failed to initialize chat");throw t.status=e.status,t}return r}catch(e){throw console.error("Error initializing chat:",e),e}},async sendReply(o,e,r){try{const t=await fetch(`${a}/api/chat-ai/replies/${o}`,{method:"POST",headers:{"Content-Type":"application/json","x-api-key":r},body:JSON.stringify({message:e})}),n=await t.json();if(!t.ok)throw new Error(n.message||"Failed to send reply");return n}catch(t){throw console.error("Error sending reply:",t),t}}},l={async requestOTP(o){try{const e=await fetch(`${a}/api/video-ai/otp`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:o})}),r=await e.json();if(!e.ok)throw new Error(r.message||"OTP request failed");return r}catch(e){throw console.error("Error requesting OTP:",e),e}},async verifyOTP(o,e){try{const r=await fetch(`${a}/api/video-ai/verify-otp`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:o,otp:e})}),t=await r.json();if(!r.ok)throw new Error(t.message||"OTP verification failed");return t}catch(r){throw console.error("Error verifying OTP:",r),r}},async getVideoList(o){try{const e=await fetch(`${a}/api/konsultan-video-merge`,{method:"GET",headers:{"Content-Type":"application/json","x-api-key":o}}),r=await e.json();if(!e.ok){const t=new Error(r.message||"Failed to fetch video history");throw t.status=e.status,t}return r}catch(e){throw console.error("Error fetching video list:",e),e}},async getCoinBalance(o){try{const e=await fetch(`${a}/api/video-ai/check-koin`,{method:"GET",headers:{"Content-Type":"application/json","x-api-key":o}}),r=await e.json();if(!e.ok)throw new Error(r.message||"Failed to fetch coin balance");return r}catch(e){throw console.error("Error fetching coin balance:",e),e}}};export{l as a,i as b,d as c,s as o,p,c as t,h as v};
